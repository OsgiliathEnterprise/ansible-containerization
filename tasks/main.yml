---
- name: Requirements
  ansible.builtin.import_tasks: requirements.yml
  when:
    - standalone_role

- name: Install prerequisite - Cronie
  ansible.builtin.package:
    name: "{{ item }}"
    state: present
  become: true
  with_items:
    - cronie-anacron

- name: Create docker configuration directory
  ansible.builtin.file:
    path: "{{ ansible_containerization_configuration_folder }}"
    state: directory
    owner: root
    group: root
    mode: 0755
  become: true

- name: Install storage prerequisite
  ansible.builtin.package:
    name: xfsprogs
    state: present
  become: true

- name: Check docker volume is formatted in xfs
  ansible.builtin.shell: "xfs_info {{ ansible_containerization_docker_mountpoint }} | grep -c 'ftype=1'"
  become: yes
  register: mountedxfs
  ignore_errors: true
  changed_when: no

- name: Copy filesystem driver
  ansible.builtin.copy:
    src: daemon.json
    dest: "{{ ansible_containerization_daemon_configuration_file }}"
    owner: root
    group: root
    mode: 0640
  become: true
  notify: containerization | restart service
  when: not mountedxfs is failed

- name: Copy execution driver
  ansible.builtin.copy:
    src: exec-daemon.json
    dest: "{{ ansible_containerization_daemon_configuration_file }}"
    owner: root
    group: root
    mode: 0640
  become: true
  notify: containerization | restart service
  when: mountedxfs is failed

- name: Facts | retrieve current machine architecture
  ansible.builtin.setup:
    gather_subset:
      - architecture
  register: current_host_architecture
  delegate_facts: true

- name: Facts | retrieve current machine architecture
  ansible.builtin.debug:
    var: current_host_architecture
    verbosity: 3

- name: Install docker
  ansible.builtin.include_role:
    name: geerlingguy.docker
  vars:
    docker_compose_version: "{{ docker_compose_vers }}"
    docker_compose_arch: "{{ current_host_architecture.ansible_facts.ansible_architecture }}"
    ansible_become: true

- name: Install python-docker
  ansible.builtin.package:
    name: python3-docker
    state: present
  become: true

- name: Start docker
  ansible.builtin.systemd:
    name: docker
    state: started
    enabled: true
  delay: 6
  retries: 4
  register: res
  until: res is success
  become: true

- name: Copy docker service restarter
  ansible.builtin.copy:
    src: 1docker
    dest: "/etc/cron.hourly/1docker"
    owner: root
    group: root
    mode: 0755
  become: true
  notify: containerization | restart service
